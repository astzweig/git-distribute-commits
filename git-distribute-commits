#!/usr/bin/env zsh

# =============
# Utilities
# =============

function dateToTimestamp() {
	local d1="$1"
	date -j -f "%Y-%m-%dT%H:%M:%S" "$1" +%s 2> /dev/null
}

function getDateDiffInDays() {
	local d1="$1" d2="$2" result
	[[ $# -eq 2 ]] || return 1

	isNumberRegex='^([0-9]|[1-9][0-9]*)$'
	[[ $d1 =~ $isNumberRegex ]] && (( $d1 >= 0 )) || return 2
	[[ $d2 =~ $isNumberRegex ]] && (( $d2 >= 0 )) || return 3

	if [[ $((d1 - d2)) -gt 0 ]]; then
		(( result = d1 - d2 ))
	else
		(( result = d2 - d1 ))
	fi
	echo $(( $result / 86400 ))
}

function getAmountOfLinesInVar() {
	local varname=$1
	local lines=(${(f)${(P)varname}})
	echo ${#lines}
}

function sortLinesInVarLexicographically() {
	local varname=$1
	typeset -g ${varname}=${(F)${(if)${(P)varname}}}
}

function selectFirstNLinesOfVar() {
	local varname=$1 n=$2
	[[ -n $varname ]] || return 1
	[[ -v $varname ]] || return 2
	[[ -n $n ]] || return 0
	local lines=(${(f)${(P)varname}})
	[[ ${#lines} -gt $n ]] || return 0
	typeset -g ${varname}=${(F)lines[1,$n]}
}

function getLastLineOfVar() {
	local varname=$1
	[[ $# -eq 1 ]] || return 1
	[[ -v $varname ]] || return 2
	local lines=(${(f)${(P)varname}})
	echo ${lines[-1]}
}

function ensureVarHasAtLeastNLines() {
	local varname=$1 n=$2
	local lines=(${(f)${(P)varname}})
	[[ $n -gt 0 ]] || return 0
	if [[ ${#lines} -lt $n ]]; then
		typeset -g ${varname}="`printf "${(P)varname}\n%.0s" {1..$n}`"
	fi
}

# =============
# End Utilities
# =============

function main() {
}

if [[ "${ZSH_EVAL_CONTEXT}" == toplevel ]]; then
	main "$@"
fi
